function orthogonal1% orthogonal iteration: first version% matrixn=3;A(1,1)=3;  A(1,2)=1;  A(1,3)=0;A(2,1)=1;  A(2,2)=3;  A(2,3)=0;A(3,1)=0;  A(3,2)=0;  A(3,3)=-1;% number of eigenvectorsm=2;% exact m eigenvectorsE_vectors=[[1/sqrt(2),1/sqrt(2),0];[1/sqrt(2),-1/sqrt(2),0]]'% number of iterationsK=10;% starting guessB=rand(n,m);% step 0k=0% apply GS to BQ=GS(B)pause% the loopfor k=1:K    k    B=A*Q;    Q=GS(B)    pause    end% find resulting eigenvalues using the RQfor ic=1:m    eigens(ic)= dot(Q(:,ic),A*Q(:,ic));endfprintf(' \n  eig_1 = %10.8f   eig_2 = %10.8f',eigens(1),eigens(2))fprintf(' \n\n')% GS procedure applied to columns of Bfunction Q=GS(B)% determine the number of columns (it's assumed m>1)m=length(B(1,:));% normalize first columnQ(:,1)=B(:,1)/norm(B(:,1),2);% now loop through other columnsfor j=2:m    e=B(:,j);    for k=1:j-1        r=dot(B(:,j),Q(:,k));        e=e-r*Q(:,k);    end    Q(:,j)=e/norm(e,2);end